using System;
using System.Text;

namespace Pixie
{
    /// <summary>
    /// Defines common extensions for text nodes.
    /// </summary>
    public static class TextNodeExtensions
    {
        /// <summary>
        /// Gets a boolean value that indicates whether this node is a text node.
        /// </summary>
        public static bool IsTextNode[this MarkupNode Node]
        {
            const get return Node.Type.Equals(NodeConstants.TextNodeType);
        }

        /// <summary>
        /// Gets the text this node contains directly.
        /// </summary>
        public static const string GetText(this MarkupNode Node)
        {
            return Node.Attributes.Get<string>(NodeConstants.TextAttribute, "");
        }

        /// <summary>
        /// Recursively gets the text this node contains, concatenated with the
        /// text its children contain.
        /// </summary>
        public static const string GetAllText(this MarkupNode Node)
        {
            StringBuilder result = new StringBuilder();
            result.Append(Node.GetText());
            foreach (var item in Node.Children)
            {
                result.Append(item.GetAllText());
            }
            return result.ToString();
        }
    }
}

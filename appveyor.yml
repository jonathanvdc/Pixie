version: 0.1.6.{build}

assembly_info:
  patch: true
  file: AssemblyInfo.*
  assembly_version: "{version}"
  assembly_file_version: "{version}"
  assembly_informational_version: "{version}"

clone_script:
  - cmd: git clone -q --recursive --branch=%APPVEYOR_REPO_BRANCH% https://github.com/%APPVEYOR_REPO_NAME%.git %APPVEYOR_BUILD_FOLDER%
  - cmd: git checkout -qf %APPVEYOR_REPO_COMMIT%

build_script:
  - set VERNUM=0.1.6
  - echo %APPVEYOR_REPO_TAG%
  # Build packages as VERNUM-ci{build}.
  - ps: if ($env:APPVEYOR_REPO_TAG -eq $True) { $env:PKG_VERSION = $env:VERNUM; } else { $env:PKG_VERSION = "$($env:VERNUM)-ci$($env:APPVEYOR_BUILD_NUMBER)"; }

  # Restore NuGet packages.
  - nuget restore Pixie.sln
  # Build Pixie with csc.
  - msbuild /p:Configuration=Release /verbosity:quiet /nologo Pixie.sln

after_build:
  # Create the NuGet packages.
  - nuget pack -Version %PKG_VERSION% Pixie.nuspec
  - nuget pack -Version %PKG_VERSION% Pixie.Loyc.nuspec

test_script:
  # Run example programs.
  - Examples\CaretDiagnostics\bin\Release\CaretDiagnostics.exe
  - Examples\FormattedList\bin\Release\FormattedList.exe
  - Examples\ParseOptions\bin\Release\ParseOptions.exe a.txt -fno-syntax-only --files -O1 -Ofast b.txt --files=c.txt
  # Run tests.
  - Tests\bin\Release\Tests.exe

artifacts:
  - path: '*.nupkg'
    name: nupkgs

deploy:
  - provider: NuGet
    server:
    api_key:
      secure: vIYC0UO8DFL2HXrIu20ZQs1NR31SvGZWioDBgXzyMwJEd5dySh5peABsrwWvKzU1
    skip_symbols: true
    artifact: /.*\.nupkg/
    on:
      branch: master # Release from master branch only.
      appveyor_repo_tag: true # Deploy on tag push only.
